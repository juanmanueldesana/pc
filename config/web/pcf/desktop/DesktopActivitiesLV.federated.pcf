<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <ListViewPanel
    id="DesktopActivitiesLV"
    stretch="true"
    mode="federated">
    <ExposeIterator
      applicable="false"
      valueType="entity.Activity"
      widget="DesktopActivitiesLV"/>
    <Require
      name="activities"
      type="gw.api.database.IQueryBeanResult&lt;Activity&gt;"/>
    <Variable
      initialValue="new gw.api.web.desktop.data.activity.ActivityFederatedData()"
      name="federatedDataActivities"
      type="gw.api.web.desktop.data.FederatedDataIteratorBackingData"/>
    <RowIterator
      appendPageInfo="true"
      editable="false"
      elementName="activity"
      hasCheckBoxes="true"
      type="gw.api.web.desktop.data.activity.ActivityDTO"
      value="federatedDataActivities"
      valueType="gw.api.web.desktop.data.FederatedDataIteratorBackingData">
      <ToolbarFlag
        name="alwaysTrue"/>
      <ToolbarFilter
        name="activityFilter">
        <ToolbarFilterOptionGroup
          filters="gw.api.web.desktop.data.activity.ActivityDataFilters.allFilters()"/>
      </ToolbarFilter>
      <IteratorSort
        sortBy="activity.Priority"
        sortOrder="1"/>
      <IteratorSort
        sortBy="activity.TargetDate"
        sortDirection="descending"
        sortOrder="2"/>
      <Row
        useArchivedStyle="return activity.IsArchived">
        <BooleanRadioCell
          enableSort="false"
          icon="&quot;new&quot;"
          iconType="svgFileName"
          id="UpdatedSinceLastViewed"
          tooltip="DisplayKey.get(&quot;Web.DesktopActivitiesLV.NewActivityTooltip&quot;)"
          value="activity.UpdatedSinceLastViewed"/>
        <BooleanRadioCell
          icon="&quot;escalated&quot;"
          iconColor="gw.api.web.color.GWColor.THEME_ALERT_ERROR"
          iconType="svgFileName"
          id="Escalated"
          tooltip="DisplayKey.get(&quot;Web.DesktopActivitiesLV.EscalatedActivityTooltip&quot;)"
          value="activity.Escalated"/>
        <DateCell
          fontColor="activity.UIOverdueColor"
          id="DueDate"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.DueDate&quot;)"
          value="activity.TargetDate"
          wrap="false"/>
        <TypeKeyCell
          id="Priority"
          fontColor="activity.UIPriorityColor"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Priority&quot;)"
          value="typekey.Priority.get(activity.Priority)"
          valueType="typekey.Priority"
          wrap="false"/>
        <TypeKeyCell
          id="Status"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Status&quot;)"
          value="typekey.ActivityStatus.get(activity.Status)"
          valueType="typekey.ActivityStatus"
          wrap="false"/>
        <TextCell
          action="FederatedActivityForward.go(activity.PublicId, activity.AccountPublicId)"
          available="perm.Activity.view(activity)"
          grow="true"
          id="Subject"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Subject&quot;)"
          value="activity.Subject"
          wrap="true"/>
        <TextCell
          enableSort="false"
          id="SearchResultID"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.ID&quot;)"
          value="activity.SearchResultID"
          wrap="false"/>
        <TextCell
          enableSort="false"
          id="Insured"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.AccountHolder&quot;)"
          value="activity.UIDisplayName"
          wrap="false"/>
        <TextCell
          id="Product"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.Product&quot;)"
          sortBy="activity.PolicyProductCode"
          value="activity.PolicyProduct"
          wrap="false"/>
        <TextCell
          id="AssignedBy"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.AssignedBy&quot;)"
          value="activity.AssignedByUser"
          valueType="java.lang.String"
          wrap="false"/>
        <TypeKeyCell
          enableSort="false"
          id="State"
          label="DisplayKey.get(&quot;Web.DesktopActivitiesLV.State&quot;)"
          value="activity.UIDisplayState"
          valueType="typekey.State"
          wrap="false"/>
      </Row>
    </RowIterator>
  </ListViewPanel>
</PCF>