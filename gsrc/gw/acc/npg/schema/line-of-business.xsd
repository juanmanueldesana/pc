<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified"
  targetNamespace="http://guidewire.com/productgenerator"
  xmlns="http://guidewire.com/productgenerator">
  <xs:element
    name="product">
    <xs:complexType>
      <xs:annotation>
        <xs:appinfo>New Product Generator</xs:appinfo>
        <xs:documentation
          xml:lang="en">
          Product which helps to generate source for new line of business by new product generator
        </xs:documentation>
      </xs:annotation>
      <xs:sequence>
        <xs:element
          name="abbreviation"
          type="lineabbreviation">
          <xs:annotation>
            <xs:documentation
              xml:lang="en">
              Abbreviation usually a 2-3 character upper case acronym that is used as short-hand for the line, such as
              "CP" for Commercial Property line.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element
          name="code"
          type="code">
          <xs:annotation>
            <xs:documentation
              xml:lang="en">
              Product Code for generated line of business, such as "CommercialProperty" for Commercial Property line.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element
          name="display-name"
          type="displayname">
          <xs:annotation>
            <xs:documentation
              xml:lang="en">
              Display name for generated line of business, such as "Commercial Property" for Commercial Property line.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element
          name="suffix-for-entity"
          type="suffix">
          <xs:annotation>
            <xs:documentation
              xml:lang="en">
              There is sometimes a convention to identify all the extension entities that are created as part of a
              project with a common suffix for easy identification. For example, if you wish all the new entities
              created (for the policy line, covered items, coverages, etc.) to end in Ext (e.g., NewXYZLineExt),
              you can specify suffix as "Ext" and also add this suffix in entity-name i.e "NewXYZLineExt".
              Note: The suffix will be appended to entities name which is not specified in this xml e.g.
              NewXYZLineCovExt. All the specified entity names will be used as it is without any addition of suffix.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element
          name="line"
          type="line"
          minOccurs="1"
          maxOccurs="1"/>
        <xs:element
          name="coverables"
          maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element
                name="coverable"
                type="coverable"
                minOccurs="0"
                maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element
          name="costs"
          maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element
                name="cost"
                type="cost"
                minOccurs="1"
                maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element
          name="other-entities"
          minOccurs="0"
          maxOccurs="1">
          <xs:annotation>
            <xs:documentation
              xml:lang="en">
              Other entities that should be created as part of code generation.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element
                name="entity"
                type="entity"
                minOccurs="0"
                maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <!--******************Subtypes Definitions****************-->

  <xs:complexType
    name="line">
    <xs:sequence>
      <xs:element
        name="code"
        type="xs:string"
        minOccurs="1"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Product policy line pattern name for new line of business, such as "CPLine" for Commercial Property line.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="entity-name"
        type="entityname"
        minOccurs="1"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Line entity name, such as "PMILine" for Private Medical Insurance line. This should not exceed 21 characters
            including suffix.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="include-exclusions"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if line level exclusions should be supported, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="include-conditions"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if line level conditions should be supported, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="include-modifiers"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if line level modifiers should be supported, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="additional-fields"
        minOccurs="0"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Optional additional fields, if specified they will appear on line entity.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element
              name="field"
              maxOccurs="unbounded"
              type="field"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType
    name="coverable">
    <xs:sequence>
      <xs:element
        name="entity-name"
        type="entityname"
        minOccurs="1"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Entity name for coverable. This should not exceed 21 characters including suffix.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="description"
        type="xs:string"
        minOccurs="1"
        maxOccurs="1"/>
      <xs:element
        name="referred-from"
        type="entityname"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Name of coverable entity from which this coverable will be referred as an array. This should be name of the
            policy line entity or another Coverable entity already defined in coverables.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="reference-name"
        type="fieldname"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Array reference name for this entity in referred-from entity.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="attached-to-location"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if this coverable should be linked to a location, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="attached-to-building"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if this coverable should be linked to a building, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="include-exclusions"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if exclusions should be supported on this coverable, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="include-conditions"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if conditions should be supported on this coverable, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="include-modifiers"
        type="xs:boolean"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            True if modifiers should be supported on this coverable, false otherwise.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="additional-fields"
        minOccurs="0"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Optional additional fields, if specified they will appear on this coverable entity.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element
              name="field"
              maxOccurs="unbounded"
              type="field"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType
    name="cost">
    <xs:sequence>
      <xs:element
        name="entity-name"
        type="entityname"
        minOccurs="1"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Entity name for this cost. This should not exceed 25 characters including suffix.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="description"
        type="xs:string"
        minOccurs="1"
        maxOccurs="1"/>
      <xs:element
        name="supertype-entity"
        type="entityname"
        minOccurs="1"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Usually it is line's base cost type (e.g., PACost), but you can change this if you want this
            cost to inherit fields from another subtype of the line's base cost instead.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="coverable-entity-name"
        type="entityname"
        minOccurs="0"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            If provided, it should be the entity name of a Coverable which each cost should be linked to.
            Note: the line's base cost already has a FK to the line itself, so there is no need to put the line here as
            the Coverable in order to get that FK.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="coverable-entity-for-coverage"
        type="entityname"
        minOccurs="0"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            If provided, it should be the entity name of a Coverable (or the policy line) whose Coverage
            entity each cost should be linked to. For example, if you want the cost linked to a line-level coverage,
            then you would enter the entity name of the policy line itself here (e.g. PersonalAutoLine).
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="reference-name"
        type="fieldname"
        minOccurs="1"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Name of this cost array in linked entities.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element
        name="additional-fields"
        minOccurs="0"
        maxOccurs="1">
        <xs:annotation>
          <xs:documentation
            xml:lang="en">
            Optional additional fields, if specified they will appear on this cost entity.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element
              name="field"
              maxOccurs="unbounded"
              type="costfield"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType
    name="entity">
    <xs:sequence>
      <xs:element
        name="name"
        type="entityname"
        minOccurs="1"
        maxOccurs="1"/>
      <xs:element
        name="description"
        type="xs:string"
        minOccurs="1"
        maxOccurs="1"/>
      <xs:element
        name="fields"
        maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element
              name="field"
              maxOccurs="unbounded"
              type="field"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType
    name="field">
    <xs:attribute
      name="name"
      type="fieldname"
      use="required"/>
    <xs:attribute
      name="desc"
      type="xs:string"
      use="required"/>
    <xs:attribute
      name="nullok"
      type="xs:boolean"/>
    <xs:attribute
      name="type"
      type="datatype"
      use="required"/>
    <xs:attribute
      name="fkentity"
      type="entityname"/>
    <xs:attribute
      name="typelist"
      type="xs:string"/>
    <xs:attribute
      name="size"
      type="xs:integer"/>
    <xs:attribute
      name="scale"
      type="xs:integer"/>
    <xs:attribute
      name="precision"
      type="xs:integer"/>
    <xs:attribute
      name="arrayentity"
      type="entityname"/>
    <xs:attribute
      name="owner"
      type="xs:boolean"/>
    <xs:attribute
      name="cascadeDelete"
      type="xs:boolean"/>
  </xs:complexType>

  <xs:complexType
    name="costfield">
    <xs:complexContent>
      <xs:extension
        base="field">
        <xs:attribute
          name="costkeyfield"
          type="xs:boolean"
          use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!--******************Validation types Definitions****************-->
  <xs:simpleType
    name="lineabbreviation">
    <xs:annotation>
      <xs:documentation
        xml:lang="en">2 to 3 characters allowed including uppercase alphabets
      </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string">
      <xs:pattern
        value="[A-Z]{2,3}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType
    name="displayname">
    <xs:restriction
      base="xs:string">
      <xs:minLength
        value="2"/>
      <xs:maxLength
        value="50"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType
    name="code">
    <xs:annotation>
      <xs:documentation
        xml:lang="en">Up to 32 characters allowed including lower-uppercase alphanumerical characters and underscore
      </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string">
      <xs:pattern
        value="[a-zA-Z_][a-zA-Z0-9_]{0,31}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType
    name="suffix">
    <xs:annotation>
      <xs:documentation
        xml:lang="en">Up to 5 characters allowed including lower-uppercase alphanumerical characters and underscore
      </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string">
      <xs:pattern
        value="[a-zA-Z0-9_]{0,5}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType
    name="fieldname">
    <xs:annotation>
      <xs:documentation
        xml:lang="en">Up to 30 characters allowed including lower-uppercase alphanumerical characters and underscore
      </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string">
      <xs:pattern
        value="[a-zA-Z_][a-zA-Z0-9_]{0,29}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType
    name="entityname">
    <xs:annotation>
      <xs:documentation
        xml:lang="en">Up to 25 character allowed including lower-uppercase alphanumerical characters and underscore
      </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string">
      <xs:pattern
        value="[a-zA-Z_][a-zA-Z0-9_]{0,24}"/>
  </xs:restriction>
  </xs:simpleType>

  <xs:simpleType
    name="datatype">
    <xs:restriction
      base="xs:string">
      <xs:enumeration
        value="bit"/>
      <xs:enumeration
        value="integer"/>
      <xs:enumeration
        value="longint"/>
      <xs:enumeration
        value="positiveinteger"/>
      <xs:enumeration
        value="nonnegativeinteger"/>
      <xs:enumeration
        value="decimal"/>
      <xs:enumeration
        value="percentage"/>
      <xs:enumeration
        value="rate"/>
      <xs:enumeration
        value="money"/>
      <xs:enumeration
        value="shorttext"/>
      <xs:enumeration
        value="mediumtext"/>
      <xs:enumeration
        value="longtext"/>
      <xs:enumeration
        value="varchar"/>
      <xs:enumeration
        value="datetime"/>
      <xs:enumeration
        value="array"/>
      <xs:enumeration
        value="foreignkey"/>
      <xs:enumeration
        value="typekey"/>
      <xs:enumeration
        value="auto-numbering"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>